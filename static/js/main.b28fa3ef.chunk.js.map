{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","element","document","createElement","file","Blob","getElementById","href","URL","createObjectURL","download","body","appendChild","click","split","map","c","i","join","filter","e","length","toFixed","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b28fa3ef.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function About(props) {\n  let myStyle = {\n    color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n    backgroundColor: props.mode === \"dark\" ? \"rgb(36 74 104)\" : \"white\",\n  };\n\n  return (\n    <div className=\"continer px-3 py-3\" style={myStyle}>\n      <h1 className=\"my-4\">About Us</h1>\n      <div className=\"accordion\" style={myStyle} id=\"accordionExample\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n              style={myStyle}\n            >\n              <strong>Accordion Item #1</strong>\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            style={myStyle}\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={myStyle}>\n              <strong>This is the first item's accordion body.</strong> It is\n              shown by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">\n                  {props.aboutText}\n                </Link>\n              </li>\n            </ul>\n            {/* <form className=\"d-flex\">\n              <input\n                className=\"form-control me-2\"\n                type=\"search\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n              />\n              <button className=\"btn btn-outline-success\" type=\"submit\">\n                Search\n              </button>\n            </form> */}\n            <div\n              className={`form-check form-switch text-${\n                props.mode === \"light\" ? \"dark\" : \"light\"\n              }`}\n            >\n              <input\n                className=\"form-check-input\"\n                onClick={props.toggleMode}\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Enable DarkMode\n              </label>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string,\n};\nNavbar.defaultProps = {\n  title: \"Set Title Here\",\n  aboutText: \"Set About Text Here\",\n};\n","import React, { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard/lib/Component\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to UpperCase\", \"success\");\n  };\n\n  const handleLowClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to LowerCase\", \"success\");\n  };\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleClearBox = () => {\n    setText(\"\");\n  };\n\n  const handleCopyClipboard = () => {\n    props.showAlert(\"Text copied to Clipboard\", \"success\");\n  };\n\n  const handleDownloadText = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([document.getElementById(\"myBox\").value], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"myFile.txt\";\n    document.body.appendChild(element);\n    element.click();\n    props.showAlert(\"Text downloaded!!\", \"success\");\n  };\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces trimmed\", \"success\");\n  };\n\n  const handleAlternateCase = () => {\n    setText(\n      text\n        .split(\"\")\n        .map((c, i) => (i % 2 === 0 ? c.toLowerCase() : c.toUpperCase()))\n        .join(\"\")\n    );\n    props.showAlert(\"Converted to AlternateCases\", \"success\");\n  };\n\n  const [text, setText] = useState(\"Enter Text Here\");\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n            }}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\n          onClick={handleUpClick}\n        >\n          Convert to UpperCase\n        </button>\n        <button\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\n          onClick={handleLowClick}\n        >\n          Convert to LowerCase\n        </button>\n        <button\n          className=\"btn-outline btn-primary btn-sm mx-2 my-2\"\n          onClick={handleClearBox}\n        >\n          Clear Text\n        </button>\n        <CopyToClipboard text={text}>\n          <button\n            className=\"btn btn-primary btn-sm mx-2 my-2\"\n            onClick={handleCopyClipboard}\n          >\n            Copy To Clipboard\n          </button>\n        </CopyToClipboard>\n        <button\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\n          onClick={handleDownloadText}\n        >\n          Download Text\n        </button>\n        <button\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\n          onClick={handleAlternateCase}\n        >\n          aLtErNaTe TeXt\n        </button>\n        <button\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\n          onClick={handleExtraSpaces}\n        >\n          Trim Extra Spaces\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1>Your Text Summary</h1>\n        <p>\n          {\n            text.split(\" \").filter((e) => {\n              return e.length !== 0;\n            }).length\n          }{\" \"}\n          words | {text.length} characters\n        </p>\n        <p>\n          {(\n            0.08 *\n            text.split(\" \").filter((e) => {\n              return e.length !== 0;\n            }).length\n          ).toFixed(1)}{\" \"}\n          Minutes read.\n        </p>\n        <h2>Preview</h2>\n        <p>\n          {text.length > 0\n            ? text\n            : \"Enter something in the textbox above to preview it here\"}{\" \"}\n        </p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    <div style={{ height: \"50px\" }}>\n      {props.alert && (\n        <div\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n          role=\"alert\"\n        >\n          <strong>{capitalize(props.alert.type)} </strong>: {props.alert.msg}\n        </div>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"DarkMode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"LightMode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}